/* ===========================================================================
   LEVEL SELECTOR STYLING - FIXED VERSION
   Leverages buttonsboxes.css classes for metallic styling
   =========================================================================== */

/* ==========================================================================
   1. LEVEL SELECTOR CONTAINER - extends styled-box
   ========================================================================== */

.level-selector-container {
  /* Apply styled-box class in HTML for base styling */
  /* Add specific overrides */
  padding: 15px 10px;
  margin: 15px auto 10px;
}

/* Level selector title - extends styled-box-title */
.level-selector-title {
  /* Apply styled-box-title class in HTML */
  color: #00008B; /* Dark blue - override default color */
  margin-bottom: 8px;
}

/* ==========================================================================
   2. LEVEL SCROLLER CONTAINER
   ========================================================================== */

.level-scroller-container {
  /* Simple flex container */
  display: flex;
  align-items: center;
  justify-content: center;
  height: 70px;
  margin: 10px 0;
  position: relative;
  overflow: visible; /* Ensure elements aren't accidentally hidden */
}

/* ==========================================================================
   3. LEVEL BUTTON - extends metallic-button
   ========================================================================== */

/* Fixed positioning container for level buttons */
.level-btn-container {
  /* Keep centered in the flex layout */
  order: 2;
  position: relative;
  width: 170px; /* Increased width for text and screws */
  height: 60px;
  /* Ensure this container doesn't move or resize */
  flex: 0 0 170px;
  display: flex;
  justify-content: center;
  align-items: center;
}

/* Base level button - apply metallic-button class in HTML */
.level-btn-scrollable {
  /* Apply metallic-button class in HTML for base styling */
  /* Specific level button styles */
  font-size: 1.2rem;
  width: 170px; /* Increased from 100px (70% wider) */
  height: 60px;
  margin: 0;
  
  /* Position absolutely in the center of the container */
  position: absolute;
  top: 0;
  left: 0;
  
  /* Visibility handling */
  opacity: 0; /* Start invisible */
  pointer-events: none;
  transition: opacity 0.3s ease;
  
  /* IMPORTANT: Keep transforms only for hover state, not for positioning */
  transform: none;
}

/* Screw elements - unique to level selector buttons */
.level-btn-scrollable::before,
.level-btn-scrollable::after {
  content: '';
  position: absolute;
  width: 16px;
  height: 16px;
  background-color: #b0b0b0;
  border-radius: 50%;
  z-index: 1;
  
  /* Screw styling */
  border-top: 2px solid rgba(255, 255, 255, 0.8);
  border-bottom: 2px solid rgba(0, 0, 0, 0.5);
  box-shadow: 0 3px 4px rgba(0, 0, 0, 0.5),
              inset 0 -1px 3px rgba(0, 0, 0, 0.3);
  
  /* Diagonal screw lines */
  background-image: linear-gradient(135deg, transparent 45%, #555 45%, #555 55%, transparent 55%);
}

/* Position screws */
.level-btn-scrollable::before {
  left: 10px;
  top: calc(50% - 8px); /* Half the screw height */
}

.level-btn-scrollable::after {
  right: 10px;
  top: calc(50% - 8px); /* Half the screw height */
}

/* Visible state */
.level-btn-scrollable.visible {
  opacity: 1;
  pointer-events: auto;
  /* Ensure no transform is applied here */
  transform: none;
}

/* Locked state */
.level-btn-scrollable.locked {
  opacity: 0.4;
  pointer-events: none;
  cursor: not-allowed;
}

/* Hover state - only apply 1px movement on hover and nothing else */
.level-btn-scrollable:hover:not(:disabled):not(.locked) {
  transform: translateY(-1px) !important; /* Force 1px movement, override other transforms */
}

/* Active state - return to normal position when clicked */
.level-btn-scrollable:active:not(:disabled):not(.locked),
.level-btn-scrollable.active:not(.locked) {
  transform: none !important; /* Force back to normal position */
}

/* ==========================================================================
   4. ARROW BUTTONS - extends metallic-button 
   ========================================================================== */

/* Base arrow button - apply metallic-button class in HTML */
.level-arrow {
  /* Apply metallic-button class in HTML */
  /* Arrow-specific styles */
  width: 44px;
  height: 44px;
  border-radius: 50%; /* Circular button */
  padding: 0;
  flex: 0 0 auto;
  z-index: 10;
  margin: 0 15px; /* Add margin for spacing from the center */
}

/* Left arrow */
.level-arrow.left-arrow {
  order: 1; /* Flexbox order - first item */
}

/* Right arrow */
.level-arrow.right-arrow {
  order: 3; /* Flexbox order - last item */
}

/* Arrow SVG styling */
.level-arrow svg {
  width: 30px;
  height: 30px;
  filter: drop-shadow(0px 1px 1px rgba(255, 255, 255, 0.7))
         drop-shadow(0px -1px 1px rgba(0, 0, 0, 0.4));
  fill: #444;
  stroke: #444;
  stroke-width: 1px;
  margin: 0 !important; /* Override metallic-button margin */
}

/* ==========================================================================
   5. ANIMATION FOR LEVEL CHANGE (MODIFIED)
   ========================================================================== */

/* Replace the pulse animation with a fade transition */
.level-btn-scrollable.changing {
  /* No animation that moves the button */
  /* Just a subtle opacity effect */
  opacity: 0.9;
  transition: opacity 0.2s ease-in-out;
}

.level-btn-scrollable.visible.changing::after,
.level-btn-scrollable.visible.changing::before {
  /* Optional: Slightly rotate screws for change indication */
  transform: rotate(45deg);
  transition: transform 0.3s ease-in-out;
}

/* ==========================================================================
   6. RESPONSIVE ADJUSTMENTS
   ========================================================================== */

/* Mobile Optimizations */
@media (max-width: 768px) {
  .level-scroller-container {
    height: 55px;
  }
  
  .level-btn-container {
    width: 140px;
    height: 50px;
    flex: 0 0 140px;
  }
  
  .level-btn-scrollable {
    font-size: 1.6rem;
    width: 140px; /* Adjusted for mobile but still wider than original */
    height: 50px;
  }
  
  .level-arrow {
    width: 38px;
    height: 38px;
    margin: 0 10px;
  }
  
  .level-arrow svg {
    width: 26px;
    height: 26px;
  }
  
  /* Adjust the screw size for smaller screens */
  .level-btn-scrollable::before,
  .level-btn-scrollable::after {
    width: 12px;
    height: 12px;
  }
  
  .level-btn-scrollable::before {
    left: 8px;
    top: calc(50% - 6px); /* Half of 12px */
  }
  
  .level-btn-scrollable::after {
    right: 8px;
    top: calc(50% - 6px); /* Half of 12px */
  }
}

/* Touch device optimizations */
.touch-device .level-arrow {
  min-height: 48px;
  min-width: 48px;
}

/* Even smaller screens */
@media (max-width: 375px) {
  .level-btn-container {
    width: 120px;
    flex: 0 0 120px;
  }
  
  .level-btn-scrollable {
    width: 120px;
    font-size: 1.4rem;
  }
  
  .level-arrow {
    width: 34px;
    height: 34px;
    margin: 0 8px;
  }
  
  .level-arrow svg {
    width: 22px;
    height: 22px;
  }
  
  .level-btn-scrollable::before,
  .level-btn-scrollable::after {
    width: 10px;
    height: 10px;
  }
  
  .level-btn-scrollable::before {
    left: 6px;
    top: calc(50% - 5px); /* Half of 10px */
  }
  
  .level-btn-scrollable::after {
    right: 6px;
    top: calc(50% - 5px); /* Half of 10px */
  }
}
